<div class="server index reset-mp">
  <div class="head pl-40 pr-40 pt-40">
    <div class="subhead">
      <div class="flex pd-30 gap-30">
        <div class="server__logo">
          <img src="asset://<%= server_current.server.urlLogo %>" width="160" height="160" alt="logo_server">
        </div>
        <div class="infos">
          <h2 class="reset-mp underline dark server__title"><%= server_current.server.name %></h2>
          <h4 class="server__description mt-10"><%= server_current.server.expl_server %></h4>
          <div class="state">
            <div class="indicator"><i class="fa-solid fa-circle"></i></div>
            <div class="label">Recherche des infos..</div>
          </div>
        </div>
      </div>
      <div class="flex justif-center">
        <div class="alert black-3 serverUnavailble" style="border-radius:8px;position: relative;bottom: 6px;display: none;width: 50%; text-align: center;">
          <i class="fa-solid fa-triangle-exclamation fcolor-2 mr-10"></i> <%= FZUtils.getLangKey("server.play.unavailable") %>
        </div>
      </div>
      <button class="btn btn-primary btn-download-launch-game btn-progress" id="btnDLGFirst" disabled>
        <div class="content"><span class="label"><%= FZUtils.getLangKey("general.pwait") %></span></div>
        <div class="progress">
            <div class="progress-bar" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
      </button>
      
      <div class="ui top attached tabular nav nav-pills mb-3 menu">
        <li class="item active"  data-tab="news">
          <a>
            <%= FZUtils.getLangKey("server.tabs.news") %>
          </a>
        </li>
        <li class="item" data-tab="pnotes">
          <a>
            <%= FZUtils.getLangKey("server.tabs.pnotes") %>
          </a>
        </li>
        <li class="item" data-tab="rpacks">
          <a>
            <%= FZUtils.getLangKey("server.tabs.rpacks") %>
          </a>
        </li>
        <li class="item" data-tab="screens">
          <a>
            <%= FZUtils.getLangKey("server.tabs.screens") %>
          </a>
        </li>
        <li class="item" data-tab="config">
          <a>
            <%= FZUtils.getLangKey("server.tabs.settings") %>
          </a>
        </li>
      </div>
    </div>
  </div>
  <div class="pl-40 pr-40 pb-40">
    <div class="ui bottom attached tab segment server active" data-tab="news">
      <div class="server pl-30 pr-30 pb-60 pt-60"></div>
    </div>
    <div class="ui bottom attached tab segment server" data-tab="pnotes">
      <div class="server pl-30 pr-30 pb-60 pt-60"></div>
    </div>
    <div class="ui bottom attached tab segment server" data-tab="rpacks">
      <div class="server pl-30 pr-30 pb-60 pt-60"></div>
    </div>
    <div class="ui bottom attached tab segment server" data-tab="screens">
      <div class="server pl-30 pr-30 pb-60 pt-60"></div>
    </div>
    <div class="ui bottom attached tab segment server" data-tab="config">
      <div class="server pl-30 pr-30 pb-60 pt-60"></div>
    </div>
  </div>
</div>
<script src="asset://js/utils.js"></script>
<script>
  const path = require('path');
  const Server = require(path.join('<%= srcDir %>', 'assets/js/connected/server.js'))
  const Play = require(path.join('<%= srcDir %>', 'assets/js/connected/server/subpage/play.js'))
  var server = new Server('<%= server_current.idServer %>');
  var rootDir = require('electron-root-path').rootPath;

  var play = new Play('<%= server_current.idServer %>');
  const axios = require('axios').default;
  var pinit = async () => {
    await play.preInit().then(() => {});
  }

  pinit()

  function loadServerTab(tab, data_bs_target, reload){
    var link = data_bs_target;
    if(reload === true)
      $('.tab.segment.server[data-tab="'+link+'"]').find('.server').empty();
    var data = [{session: userSession}];
    return new Promise(async (resolve, reject) => {
      await FZUtils.initVariableEJS(data, false).then(async (datar) => {
        await ejs.renderFile(appRoot.path+"/src/template/connected/server/subpage/"+link.replaceAll('#', '')+".ejs", datar, {}, async (err, str) => {
          if (err) return console.log(err)
          await $('.tab.segment.server[data-tab="'+link+'"]').find('.server').html(str);
          tab.attr("aload", "true");
          resolve()
        })
      })
    })
  }

  
  $('.menu .item').tab({'onVisible': function(tabPath){
    $('.menu .item').removeClass('active')
    //$('.menu .item').parent().removeClass('active')
    var tabMenuItem = $('.menu .item[data-tab="'+tabPath+'"]');
    //tabMenuItem.parent().addClass('active');
    if(!tabMenuItem.is('[aload]'))
      loadServerTab(tabMenuItem, tabPath, false)
  }});

  //INIT CONFIG
  loadServerTab($('.menu .item[data-tab="news"]'), "news", false);
  loadServerTab($('.menu .item[data-tab="config"]'), "config", false);

  //STATE SERVER
  axios.get('https://api.mcsrvstat.us/2/<%= server_current.server.serverAddress %>').then((response) => {
    var data = response.data;
    $('.infos .state .indicator').addClass(((data.online) ? "online" : "offline"));
    $('.infos .state .label').html(((data.online) ? "En ligne, "+data.players.online+" joueur(s)" : "Hors ligne"));
  })
</script>